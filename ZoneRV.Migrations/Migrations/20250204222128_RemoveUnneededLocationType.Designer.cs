// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZoneRV.DBContexts;

#nullable disable

namespace ZoneRV.Migrations.Migrations
{
    [DbContext(typeof(ProductionContext))]
    [Migration("20250204222128_RemoveUnneededLocationType")]
    partial class RemoveUnneededLocationType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("production")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZoneRV.Models.Location.LocationCustomName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LineLocationId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("LineLocationId");

                    b.ToTable("LocationCustomName", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.LocationInventoryName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationInventoryName", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.OrderedLineLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Order")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.HasIndex("LocationId");

                    b.ToTable("OrderedLineLocations", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.WorkspaceLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("LocationType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("WorkspaceLocation", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.AreaOfOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("AreaOfOrigin", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Model", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.ProductionLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkspaceId");

                    b.ToTable("Line", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.ProductionWorkspace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Workspace", "production");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.LocationCustomName", b =>
                {
                    b.HasOne("ZoneRV.Models.Location.OrderedLineLocation", "LineLocation")
                        .WithMany("CustomNames")
                        .HasForeignKey("LineLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineLocation");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.LocationInventoryName", b =>
                {
                    b.HasOne("ZoneRV.Models.Location.OrderedLineLocation", "LineLocation")
                        .WithMany("InventoryNames")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LineLocation");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.OrderedLineLocation", b =>
                {
                    b.HasOne("ZoneRV.Models.Production.ProductionLine", "Line")
                        .WithMany("OrderedLineLocations")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZoneRV.Models.Location.WorkspaceLocation", "Location")
                        .WithMany("OrderedLineLocations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.WorkspaceLocation", b =>
                {
                    b.HasOne("ZoneRV.Models.Production.ProductionWorkspace", "Workspace")
                        .WithMany("WorkspaceLocations")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.AreaOfOrigin", b =>
                {
                    b.HasOne("ZoneRV.Models.Production.ProductionLine", "Line")
                        .WithMany("AreaOfOrigins")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.Model", b =>
                {
                    b.HasOne("ZoneRV.Models.Production.ProductionLine", "Line")
                        .WithMany("Models")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.ProductionLine", b =>
                {
                    b.HasOne("ZoneRV.Models.Production.ProductionWorkspace", "Workspace")
                        .WithMany("Lines")
                        .HasForeignKey("WorkspaceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.OrderedLineLocation", b =>
                {
                    b.Navigation("CustomNames");

                    b.Navigation("InventoryNames");
                });

            modelBuilder.Entity("ZoneRV.Models.Location.WorkspaceLocation", b =>
                {
                    b.Navigation("OrderedLineLocations");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.ProductionLine", b =>
                {
                    b.Navigation("AreaOfOrigins");

                    b.Navigation("Models");

                    b.Navigation("OrderedLineLocations");
                });

            modelBuilder.Entity("ZoneRV.Models.Production.ProductionWorkspace", b =>
                {
                    b.Navigation("Lines");

                    b.Navigation("WorkspaceLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
